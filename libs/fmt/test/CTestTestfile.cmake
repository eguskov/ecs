# CMake generated Testfile for 
# Source directory: D:/projects/ecs/libs/fmt/test
# Build directory: D:/projects/ecs/libs/fmt/test
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(assert-test "D:/projects/ecs/libs/fmt/bin/Debug/assert-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(assert-test "D:/projects/ecs/libs/fmt/bin/Release/assert-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(assert-test "D:/projects/ecs/libs/fmt/bin/MinSizeRel/assert-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(assert-test "D:/projects/ecs/libs/fmt/bin/RelWithDebInfo/assert-test.exe")
else()
  add_test(assert-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(chrono-test "D:/projects/ecs/libs/fmt/bin/Debug/chrono-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(chrono-test "D:/projects/ecs/libs/fmt/bin/Release/chrono-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(chrono-test "D:/projects/ecs/libs/fmt/bin/MinSizeRel/chrono-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(chrono-test "D:/projects/ecs/libs/fmt/bin/RelWithDebInfo/chrono-test.exe")
else()
  add_test(chrono-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(core-test "D:/projects/ecs/libs/fmt/bin/Debug/core-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(core-test "D:/projects/ecs/libs/fmt/bin/Release/core-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(core-test "D:/projects/ecs/libs/fmt/bin/MinSizeRel/core-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(core-test "D:/projects/ecs/libs/fmt/bin/RelWithDebInfo/core-test.exe")
else()
  add_test(core-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(gtest-extra-test "D:/projects/ecs/libs/fmt/bin/Debug/gtest-extra-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(gtest-extra-test "D:/projects/ecs/libs/fmt/bin/Release/gtest-extra-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(gtest-extra-test "D:/projects/ecs/libs/fmt/bin/MinSizeRel/gtest-extra-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(gtest-extra-test "D:/projects/ecs/libs/fmt/bin/RelWithDebInfo/gtest-extra-test.exe")
else()
  add_test(gtest-extra-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(format-test "D:/projects/ecs/libs/fmt/bin/Debug/format-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(format-test "D:/projects/ecs/libs/fmt/bin/Release/format-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(format-test "D:/projects/ecs/libs/fmt/bin/MinSizeRel/format-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(format-test "D:/projects/ecs/libs/fmt/bin/RelWithDebInfo/format-test.exe")
else()
  add_test(format-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(format-impl-test "D:/projects/ecs/libs/fmt/bin/Debug/format-impl-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(format-impl-test "D:/projects/ecs/libs/fmt/bin/Release/format-impl-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(format-impl-test "D:/projects/ecs/libs/fmt/bin/MinSizeRel/format-impl-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(format-impl-test "D:/projects/ecs/libs/fmt/bin/RelWithDebInfo/format-impl-test.exe")
else()
  add_test(format-impl-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(locale-test "D:/projects/ecs/libs/fmt/bin/Debug/locale-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(locale-test "D:/projects/ecs/libs/fmt/bin/Release/locale-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(locale-test "D:/projects/ecs/libs/fmt/bin/MinSizeRel/locale-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(locale-test "D:/projects/ecs/libs/fmt/bin/RelWithDebInfo/locale-test.exe")
else()
  add_test(locale-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(ostream-test "D:/projects/ecs/libs/fmt/bin/Debug/ostream-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ostream-test "D:/projects/ecs/libs/fmt/bin/Release/ostream-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(ostream-test "D:/projects/ecs/libs/fmt/bin/MinSizeRel/ostream-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(ostream-test "D:/projects/ecs/libs/fmt/bin/RelWithDebInfo/ostream-test.exe")
else()
  add_test(ostream-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(printf-test "D:/projects/ecs/libs/fmt/bin/Debug/printf-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(printf-test "D:/projects/ecs/libs/fmt/bin/Release/printf-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(printf-test "D:/projects/ecs/libs/fmt/bin/MinSizeRel/printf-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(printf-test "D:/projects/ecs/libs/fmt/bin/RelWithDebInfo/printf-test.exe")
else()
  add_test(printf-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(time-test "D:/projects/ecs/libs/fmt/bin/Debug/time-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(time-test "D:/projects/ecs/libs/fmt/bin/Release/time-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(time-test "D:/projects/ecs/libs/fmt/bin/MinSizeRel/time-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(time-test "D:/projects/ecs/libs/fmt/bin/RelWithDebInfo/time-test.exe")
else()
  add_test(time-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(custom-formatter-test "D:/projects/ecs/libs/fmt/bin/Debug/custom-formatter-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(custom-formatter-test "D:/projects/ecs/libs/fmt/bin/Release/custom-formatter-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(custom-formatter-test "D:/projects/ecs/libs/fmt/bin/MinSizeRel/custom-formatter-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(custom-formatter-test "D:/projects/ecs/libs/fmt/bin/RelWithDebInfo/custom-formatter-test.exe")
else()
  add_test(custom-formatter-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(ranges-test "D:/projects/ecs/libs/fmt/bin/Debug/ranges-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(ranges-test "D:/projects/ecs/libs/fmt/bin/Release/ranges-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(ranges-test "D:/projects/ecs/libs/fmt/bin/MinSizeRel/ranges-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(ranges-test "D:/projects/ecs/libs/fmt/bin/RelWithDebInfo/ranges-test.exe")
else()
  add_test(ranges-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(posix-mock-test "D:/projects/ecs/libs/fmt/bin/Debug/posix-mock-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(posix-mock-test "D:/projects/ecs/libs/fmt/bin/Release/posix-mock-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(posix-mock-test "D:/projects/ecs/libs/fmt/bin/MinSizeRel/posix-mock-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(posix-mock-test "D:/projects/ecs/libs/fmt/bin/RelWithDebInfo/posix-mock-test.exe")
else()
  add_test(posix-mock-test NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(posix-test "D:/projects/ecs/libs/fmt/bin/Debug/posix-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(posix-test "D:/projects/ecs/libs/fmt/bin/Release/posix-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(posix-test "D:/projects/ecs/libs/fmt/bin/MinSizeRel/posix-test.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(posix-test "D:/projects/ecs/libs/fmt/bin/RelWithDebInfo/posix-test.exe")
else()
  add_test(posix-test NOT_AVAILABLE)
endif()
