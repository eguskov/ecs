//! GENERATED FILE


#ifndef __CODEGEN__

#include "script.ecs.cpp"

static constexpr ConstCompDesc reload_script_handler_components[] = {
  {hash::cstr("eid"), Desc<EntityId>::Size},
  {hash::cstr("script"), Desc<script::ScriptComponent>::Size},
};
static constexpr ConstQueryDesc reload_script_handler_query_desc = {
  make_const_array(reload_script_handler_components),
  empty_desc_array,
  empty_desc_array,
  empty_desc_array,
  empty_desc_array,
};
static constexpr ConstCompDesc build_script_handler_components[] = {
  {hash::cstr("script"), Desc<script::ScriptComponent>::Size},
};
static constexpr ConstQueryDesc build_script_handler_query_desc = {
  make_const_array(build_script_handler_components),
  empty_desc_array,
  empty_desc_array,
  empty_desc_array,
  empty_desc_array,
};
static constexpr ConstCompDesc update_script_query_components[] = {
  {hash::cstr("script"), Desc<script::ScriptComponent>::Size},
};
static constexpr ConstQueryDesc update_script_query_query_desc = {
  make_const_array(update_script_query_components),
  empty_desc_array,
  empty_desc_array,
  empty_desc_array,
  empty_desc_array,
};
static constexpr ConstCompDesc update_script_components[] = {
  {hash::cstr("script"), Desc<script::ScriptComponent>::Size},
};
static constexpr ConstQueryDesc update_script_query_desc = {
  make_const_array(update_script_components),
  empty_desc_array,
  empty_desc_array,
  empty_desc_array,
  empty_desc_array,
};
static constexpr ConstCompDesc dispatch_event_script_components[] = {
  {hash::cstr("script"), Desc<script::ScriptComponent>::Size},
};
static constexpr ConstQueryDesc dispatch_event_script_query_desc = {
  make_const_array(dispatch_event_script_components),
  empty_desc_array,
  empty_desc_array,
  empty_desc_array,
  empty_desc_array,
};
static RegSysSpec<1930591685, decltype(reload_script_handler)> _reg_sys_reload_script_handler("reload_script_handler", reload_script_handler_query_desc);
static RegSysSpec<931559298, decltype(build_script_handler)> _reg_sys_build_script_handler("build_script_handler", build_script_handler_query_desc);
static RegSysSpec<111269837, decltype(update_script_query)> _reg_sys_update_script_query("update_script_query", update_script_query_query_desc);
static RegSysSpec<2830576908, decltype(update_script)> _reg_sys_update_script("update_script", update_script_query_desc);
static RegSysSpec<976357768, decltype(dispatch_event_script)> _reg_sys_dispatch_event_script("dispatch_event_script", dispatch_event_script_query_desc);



template <> __forceinline void RegSysSpec<1930591685, decltype(reload_script_handler)>::execImpl(const RawArg &stage_or_event, Query &query) const
{
  for (int chunkIdx = 0; chunkIdx < query.chunksCount; ++chunkIdx)
  {
    const int compIdx_eid = query.desc.getComponentIndex(hash::cstr("eid"));
    const int compIdx_script = query.desc.getComponentIndex(hash::cstr("script"));
    QueryChunk &chunk_eid = query.chunks[compIdx_eid + chunkIdx * query.componentsCount];
    QueryChunk &chunk_script = query.chunks[compIdx_script + chunkIdx * query.componentsCount];
    auto it_eid = chunk_eid.begin<EntityId>();
    auto it_script = chunk_script.begin<script::ScriptComponent>();
    for (int i = 0; i < query.entitiesInChunk[chunkIdx]; ++i, ++it_eid, ++it_script)
      reload_script_handler(*(CmdReloadScript*)stage_or_event.mem, *it_eid, *it_script);
  }
}

template <> __forceinline void RegSysSpec<931559298, decltype(build_script_handler)>::execImpl(const RawArg &stage_or_event, Query &query) const
{
  for (int chunkIdx = 0; chunkIdx < query.chunksCount; ++chunkIdx)
  {
    const int compIdx_script = query.desc.getComponentIndex(hash::cstr("script"));
    QueryChunk &chunk_script = query.chunks[compIdx_script + chunkIdx * query.componentsCount];
    auto it_script = chunk_script.begin<script::ScriptComponent>();
    for (int i = 0; i < query.entitiesInChunk[chunkIdx]; ++i, ++it_script)
      build_script_handler(*(EventOnEntityCreate*)stage_or_event.mem, *it_script);
  }
}

template <> __forceinline void RegSysSpec<111269837, decltype(update_script_query)>::execImpl(const RawArg &stage_or_event, Query &query) const
{
  for (int chunkIdx = 0; chunkIdx < query.chunksCount; ++chunkIdx)
  {
    const int compIdx_script = query.desc.getComponentIndex(hash::cstr("script"));
    QueryChunk &chunk_script = query.chunks[compIdx_script + chunkIdx * query.componentsCount];
    auto it_script = chunk_script.begin<script::ScriptComponent>();
    for (int i = 0; i < query.entitiesInChunk[chunkIdx]; ++i, ++it_script)
      update_script_query(*(EventOnChangeDetected*)stage_or_event.mem, *it_script);
  }
}

template <> __forceinline void RegSysSpec<2830576908, decltype(update_script)>::execImpl(const RawArg &stage_or_event, Query &query) const
{
  for (int chunkIdx = 0; chunkIdx < query.chunksCount; ++chunkIdx)
  {
    const int compIdx_script = query.desc.getComponentIndex(hash::cstr("script"));
    QueryChunk &chunk_script = query.chunks[compIdx_script + chunkIdx * query.componentsCount];
    auto it_script = chunk_script.begin<script::ScriptComponent>();
    for (int i = 0; i < query.entitiesInChunk[chunkIdx]; ++i, ++it_script)
      update_script(*(UpdateStage*)stage_or_event.mem, *it_script);
  }
}

template <> __forceinline void RegSysSpec<976357768, decltype(dispatch_event_script)>::execImpl(const RawArg &stage_or_event, Query &query) const
{
  for (int chunkIdx = 0; chunkIdx < query.chunksCount; ++chunkIdx)
  {
    const int compIdx_script = query.desc.getComponentIndex(hash::cstr("script"));
    QueryChunk &chunk_script = query.chunks[compIdx_script + chunkIdx * query.componentsCount];
    auto it_script = chunk_script.begin<script::ScriptComponent>();
    for (int i = 0; i < query.entitiesInChunk[chunkIdx]; ++i, ++it_script)
      dispatch_event_script(*(DispatchEventStage*)stage_or_event.mem, *it_script);
  }
}

#endif // __CODEGEN__
