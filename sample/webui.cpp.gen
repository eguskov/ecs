//! GENERATED FILE


#ifndef __CODEGEN__

#include "webui.cpp"

static constexpr ConstComponentDescription Script_components[] = {
  {HASH("script"), ComponentType<script::ScriptComponent>::Size, ComponentDescriptionFlags::kNone},
};
static constexpr ConstQueryDescription Script_query_desc = {
  make_const_array(Script_components),
  empty_desc_array,
  empty_desc_array,
  empty_desc_array,
};
using ScriptBuilder = StructBuilder<
  StructField<script::ScriptComponent, INDEX_OF_COMPONENT(Script, script)>
>;

static PersistentQueryDescription _reg_query_Script(HASH("webui.cpp_Script"), Script_query_desc, nullptr);


int Script::count()
{
  Query &query = *ecs::find_query(HASH("webui.cpp_Script"));
  return query.entitiesCount;
}
template <typename Callable> void Script::foreach(Callable callback)
{
  Query &query = *ecs::find_query(HASH("webui.cpp_Script"));
  for (auto q = query.begin(), e = query.end(); q != e; ++q)
    callback(
    {
      GET_COMPONENT(Script, q, script::ScriptComponent, script)
    });
}
Index* Script::index()
{
  return nullptr;
}
Script Script::get(Query::AllIterator &iter)
{
  return {
      GET_COMPONENT(Script, iter, script::ScriptComponent, script)
    };
}
#endif // __CODEGEN__
