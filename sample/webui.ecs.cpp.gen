//! GENERATED FILE


#ifndef __CODEGEN__

#include "webui.ecs.cpp"

static constexpr ConstCompDesc AllScriptsQuery_components[] = {
  {hash::cstr("script"), Desc<script::ScriptComponent>::Size},
};
static constexpr ConstQueryDesc AllScriptsQuery_query_desc = {
  make_const_array(AllScriptsQuery_components),
  empty_desc_array,
  empty_desc_array,
  empty_desc_array,
  empty_desc_array,
};

static RegQuery _reg_query_AllScriptsQuery(hash::cstr("webui.ecs.cpp_AllScriptsQuery"), AllScriptsQuery_query_desc);

template <typename C> void AllScriptsQuery::exec(C callback)
{
  auto &query = *g_mgr->getQueryByName(hash::cstr("webui.ecs.cpp_AllScriptsQuery"));
  static constexpr int compIdx_script = index_of_component<_countof(AllScriptsQuery_components)>::get(hash::cstr("script"), AllScriptsQuery_components);
  for (int chunkIdx = 0; chunkIdx < query.chunksCount; ++chunkIdx)
  {
    QueryChunk &chunk_script = query.chunks[compIdx_script + chunkIdx * query.componentsCount];
    auto it_script = chunk_script.begin<script::ScriptComponent>();
    for (int i = 0; i < query.entitiesInChunk[chunkIdx]; ++i, ++it_script)
      callback(*it_script);
  }
}

#endif // __CODEGEN__
