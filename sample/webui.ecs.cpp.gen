//! GENERATED FILE


#ifndef __CODEGEN__

#include "webui.ecs.cpp"

static RegCompSpec<WebsocketServer> _reg_comp_websocket_server("websocket_server");
template <> int RegCompSpec<WebsocketServer>::ID = -1;

static RegCompSpec<WSGetECSData> _reg_event_WSGetECSData;
int RegCompSpec<WSGetECSData>::ID = -1;

static RegSysSpec<1792234238, decltype(init_websocket_server_handler)> _reg_sys_init_websocket_server_handler("init_websocket_server_handler", init_websocket_server_handler, { "ev", "eid", "ws_server" }, {  }, {  }, {  }, {  }, true); 
static RegSysSpec<4294383132, decltype(update_websocket_server)> _reg_sys_update_websocket_server("update_websocket_server", update_websocket_server, { "stage", "ws_server" }, {  }, {  }, {  }, {  }, true); 
static RegSysSpec<2741717703, decltype(ws_get_ecs_data)> _reg_sys_ws_get_ecs_data("ws_get_ecs_data", ws_get_ecs_data, { "ev", "ws_server" }, {  }, {  }, {  }, {  }, true); 

template <> template <> __forceinline void RegSysSpec<1792234238, decltype(init_websocket_server_handler)>::execImpl<>(const ExtraArguments &args, const int *remap, const int *offsets, Storage **storage, eastl::index_sequence<0, 1, 2>) const
{
  const int argId[] = { components[0].nameId, components[1].nameId, components[2].nameId };
  const int argOffset[] = { get_offset(remap[0], offsets), get_offset(remap[1], offsets), get_offset(remap[2], offsets) };
  init_websocket_server_handler(Value<Argument<0>::Type, Argument<0>::valueType>::get(args, storage, argId[0], argOffset[0]), Value<Argument<1>::Type, Argument<1>::valueType>::get(args, storage, argId[1], argOffset[1]), Value<Argument<2>::Type, Argument<2>::valueType>::get(args, storage, argId[2], argOffset[2]));
}

template <> template <> __forceinline void RegSysSpec<4294383132, decltype(update_websocket_server)>::execImpl<>(const ExtraArguments &args, const int *remap, const int *offsets, Storage **storage, eastl::index_sequence<0, 1>) const
{
  const int argId[] = { components[0].nameId, components[1].nameId };
  const int argOffset[] = { get_offset(remap[0], offsets), get_offset(remap[1], offsets) };
  update_websocket_server(Value<Argument<0>::Type, Argument<0>::valueType>::get(args, storage, argId[0], argOffset[0]), Value<Argument<1>::Type, Argument<1>::valueType>::get(args, storage, argId[1], argOffset[1]));
}

template <> template <> __forceinline void RegSysSpec<2741717703, decltype(ws_get_ecs_data)>::execImpl<>(const ExtraArguments &args, const int *remap, const int *offsets, Storage **storage, eastl::index_sequence<0, 1>) const
{
  const int argId[] = { components[0].nameId, components[1].nameId };
  const int argOffset[] = { get_offset(remap[0], offsets), get_offset(remap[1], offsets) };
  ws_get_ecs_data(Value<Argument<0>::Type, Argument<0>::valueType>::get(args, storage, argId[0], argOffset[0]), Value<Argument<1>::Type, Argument<1>::valueType>::get(args, storage, argId[1], argOffset[1]));
}

#endif // __CODEGEN__
